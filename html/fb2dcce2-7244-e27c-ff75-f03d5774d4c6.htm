<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Geometry Class</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="Geometry class" /><meta name="System.Keywords" content="Godot.Geometry class" /><meta name="Microsoft.Help.F1" content="Godot.Geometry" /><meta name="Microsoft.Help.Id" content="T:Godot.Geometry" /><meta name="Description" content="Geometry provides users with a set of helper functions to create geometric shapes, compute intersections between shapes, and process various other geometric operations." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="Godot" /><meta name="file" content="fb2dcce2-7244-e27c-ff75-f03d5774d4c6" /><meta name="guid" content="fb2dcce2-7244-e27c-ff75-f03d5774d4c6" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.5.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">GodotSharpAPI<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/c7d41d90-59b4-4e80-d334-bd2586caedfd.htm" title="GodotSharpAPI" tocid="roottoc">GodotSharpAPI</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/c7d41d90-59b4-4e80-d334-bd2586caedfd.htm" title="Godot" tocid="c7d41d90-59b4-4e80-d334-bd2586caedfd">Godot</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/fb2dcce2-7244-e27c-ff75-f03d5774d4c6.htm" title="Geometry Class" tocid="fb2dcce2-7244-e27c-ff75-f03d5774d4c6">Geometry Class</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/20e2b57a-87e8-1c70-f053-f1b2ef289e87.htm" title="Geometry Properties" tocid="20e2b57a-87e8-1c70-f053-f1b2ef289e87">Geometry Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/04024400-9fdd-2fd4-b7fd-4e1ae1d377d0.htm" title="Geometry Methods" tocid="04024400-9fdd-2fd4-b7fd-4e1ae1d377d0">Geometry Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>Geometry Class</h1></td></tr></table><span class="introStyle"></span> <div class="summary"><p>Geometry provides users with a set of helper functions to create geometric shapes, compute intersections between shapes, and process various other geometric operations.</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Inheritance Hierarchy</span></div><div id="ID0RBSection" class="collapsibleSection"><a href="https://docs.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">System<span id="LST12276251_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_0?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Object</a><br />  <span class="selflink">Godot<span id="LST12276251_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_1?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Geometry</span><br /></div><p> </p>
    <strong>Namespace:</strong> 
   <a href="c7d41d90-59b4-4e80-d334-bd2586caedfd.htm">Godot</a><br />
    <strong>Assembly:</strong>
   GodotSharp (in GodotSharp.dll) Version: 1.0.0<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID2RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EACA');return false;" title="Copy">Copy</a></div></div><div id="ID1EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="identifier">Geometry</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EACA");</script></div><p>The <span class="selflink">Geometry</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="68e0f903-dd02-0bf1-53ef-289b1c89d0fc.htm">Singleton</a></td><td /></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID4RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d5508c02-9b98-c935-9651-7c65472d7d7b.htm">BuildBoxPlanes</a></td><td><div class="summary"><p>Returns an array with 6 <a href="6bae6a30-944d-55fd-6c78-48fa9398e566.htm">Plane</a>s that describe the sides of a box centered at the origin. The box size is defined by <span class="code">extents</span>, which represents one (positive) corner of the box (i.e. half its actual size).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0f80ac21-13b1-20dc-7df3-7ea8e77b0f64.htm">BuildCapsulePlanes</a></td><td><div class="summary"><p>Returns an array of <a href="6bae6a30-944d-55fd-6c78-48fa9398e566.htm">Plane</a>s closely bounding a faceted capsule centered at the origin with radius <span class="code">radius</span> and height <span class="code">height</span>. The parameter <span class="code">sides</span> defines how many planes will be generated for the side part of the capsule, whereas <span class="code">lats</span> gives the number of latitudinal steps at the bottom and top of the capsule. The parameter <span class="code">axis</span> describes the axis along which the capsule is oriented (0 for X, 1 for Y, 2 for Z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="7d9ec660-28f2-1d7d-2ac0-a31690eba6a9.htm">BuildCylinderPlanes</a></td><td><div class="summary"><p>Returns an array of <a href="6bae6a30-944d-55fd-6c78-48fa9398e566.htm">Plane</a>s closely bounding a faceted cylinder centered at the origin with radius <span class="code">radius</span> and height <span class="code">height</span>. The parameter <span class="code">sides</span> defines how many planes will be generated for the round part of the cylinder. The parameter <span class="code">axis</span> describes the axis along which the cylinder is oriented (0 for X, 1 for Y, 2 for Z).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="388a6749-7a47-5d38-8441-256afc2726a0.htm">ClipPolygon</a></td><td><div class="summary"><p>Clips the polygon defined by the points in <span class="code">points</span> against the <span class="code">plane</span> and returns the points of the clipped polygon.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="226de897-3c08-2ea5-4e90-f66ec7e1da1a.htm">ClipPolygons2d</a></td><td><div class="summary"><p>Clips <span class="code">polygon_a</span> against <span class="code">polygon_b</span> and returns an array of clipped polygons. This performs  between polygons. Returns an empty array if <span class="code">polygon_b</span> completely overlaps <span class="code">polygon_a</span>.</p><p>If <span class="code">polygon_b</span> is enclosed by <span class="code">polygon_a</span>, returns an outer polygon (boundary) and inner polygon (hole) which could be distinguished by calling <a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise(<span id="LST12276251_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_2?cpp=array&lt;");</script>Vector2<span id="LST12276251_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_3?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8fc1dd74-4797-6e1d-ca99-00d8406024b2.htm">ClipPolylineWithPolygon2d</a></td><td><div class="summary"><p>Clips <span class="code">polyline</span> against <span class="code">polygon</span> and returns an array of clipped polylines. This performs  between the polyline and the polygon. This operation can be thought of as cutting a line with a closed shape.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8a812228-26c0-9157-a724-e3dfdb3a2ae2.htm">ConvexHull2d</a></td><td><div class="summary"><p>Given an array of <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a>s, returns the convex hull as a list of points in counterclockwise order. The last point is the same as the first one.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="66f6e9d6-37a8-15f5-f533-2aaac2177491.htm">ExcludePolygons2d</a></td><td><div class="summary"><p>Mutually excludes common area defined by intersection of <span class="code">polygon_a</span> and <span class="code">polygon_b</span> (see <a href="d1fce296-2d7d-1609-c600-3bd1c80909c8.htm">IntersectPolygons2d(<span id="LST12276251_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_4?cpp=array&lt;");</script>Vector2<span id="LST12276251_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_5?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>, <span id="LST12276251_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_6?cpp=array&lt;");</script>Vector2<span id="LST12276251_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_7?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>) and returns an array of excluded polygons. This performs  between polygons. In other words, returns all but common area between polygons.</p><p>The operation may result in an outer polygon (boundary) and inner polygon (hole) produced which could be distinguished by calling <a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise(<span id="LST12276251_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_8?cpp=array&lt;");</script>Vector2<span id="LST12276251_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_9?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="20cf6b37-fb9d-d83d-9b49-866b32aec0c4.htm">GetClosestPointsBetweenSegments</a></td><td><div class="summary"><p>Given the two 3D segments (<span class="code">p1</span>, <span class="code">p2</span>) and (<span class="code">q1</span>, <span class="code">q2</span>), finds those two points on the two segments that are closest to each other. Returns a <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a> that contains this point on (<span class="code">p1</span>, <span class="code">p2</span>) as well the accompanying point on (<span class="code">q1</span>, <span class="code">q2</span>).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="c29b9b63-8e9b-a7e9-2f21-d21931787cd7.htm">GetClosestPointsBetweenSegments2d</a></td><td><div class="summary"><p>Given the two 2D segments (<span class="code">p1</span>, <span class="code">q1</span>) and (<span class="code">p2</span>, <span class="code">q2</span>), finds those two points on the two segments that are closest to each other. Returns a <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a> that contains this point on (<span class="code">p1</span>, <span class="code">q1</span>) as well the accompanying point on (<span class="code">p2</span>, <span class="code">q2</span>).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="950981cd-8bda-1a05-432b-ef3eded58ad6.htm">GetClosestPointToSegment</a></td><td><div class="summary"><p>Returns the 3D point on the 3D segment (<span class="code">s1</span>, <span class="code">s2</span>) that is closest to <span class="code">point</span>. The returned point will always be inside the specified segment.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8b41aa1a-470e-fd6f-361b-e4442f4cf5bb.htm">GetClosestPointToSegment2d</a></td><td><div class="summary"><p>Returns the 2D point on the 2D segment (<span class="code">s1</span>, <span class="code">s2</span>) that is closest to <span class="code">point</span>. The returned point will always be inside the specified segment.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="feb470ec-29c8-0436-1064-7da57f00d2b3.htm">GetClosestPointToSegmentUncapped</a></td><td><div class="summary"><p>Returns the 3D point on the 3D line defined by (<span class="code">s1</span>, <span class="code">s2</span>) that is closest to <span class="code">point</span>. The returned point can be inside the segment (<span class="code">s1</span>, <span class="code">s2</span>) or outside of it, i.e. somewhere on the line extending from the segment.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="08017988-afa9-2aa4-99d9-31b2d1edcf51.htm">GetClosestPointToSegmentUncapped2d</a></td><td><div class="summary"><p>Returns the 2D point on the 2D line defined by (<span class="code">s1</span>, <span class="code">s2</span>) that is closest to <span class="code">point</span>. The returned point can be inside the segment (<span class="code">s1</span>, <span class="code">s2</span>) or outside of it, i.e. somewhere on the line extending from the segment.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2e1f334d-9552-ff88-ecec-2014d0c85174.htm">GetUv84NormalBit</a></td><td><div class="summary"><p>Used internally by the engine.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d1fce296-2d7d-1609-c600-3bd1c80909c8.htm">IntersectPolygons2d</a></td><td><div class="summary"><p>Intersects <span class="code">polygon_a</span> with <span class="code">polygon_b</span> and returns an array of intersected polygons. This performs  between polygons. In other words, returns common area shared by polygons. Returns an empty array if no intersection occurs.</p><p>The operation may result in an outer polygon (boundary) and inner polygon (hole) produced which could be distinguished by calling <a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise(<span id="LST12276251_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_10?cpp=array&lt;");</script>Vector2<span id="LST12276251_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_11?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="22be9e98-cce9-e78a-d70d-c983e62854dc.htm">IntersectPolylineWithPolygon2d</a></td><td><div class="summary"><p>Intersects <span class="code">polyline</span> with <span class="code">polygon</span> and returns an array of intersected polylines. This performs  between the polyline and the polygon. This operation can be thought of as chopping a line with a closed shape.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="e9be5c8a-4cd4-da75-c99c-29ec7008ee1b.htm">IsPointInCircle</a></td><td><div class="summary"><p>Returns <span class="code">true</span> if <span class="code">point</span> is inside the circle or if it's located exactly on the circle's boundary, otherwise returns <span class="code">false</span>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="36ef07f4-4eb3-579e-01a1-f88220621c10.htm">IsPointInPolygon</a></td><td><div class="summary"><p>Returns <span class="code">true</span> if <span class="code">point</span> is inside <span class="code">polygon</span> or if it's located exactly on polygon's boundary, otherwise returns <span class="code">false</span>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise</a></td><td><div class="summary"><p>Returns <span class="code">true</span> if <span class="code">polygon</span>'s vertices are ordered in clockwise order, otherwise returns <span class="code">false</span>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0e587a7c-2746-db7c-269d-5e787c9daf12.htm">LineIntersectsLine2d</a></td><td><div class="summary"><p>Checks if the two lines (<span class="code">from_a</span>, <span class="code">dir_a</span>) and (<span class="code">from_b</span>, <span class="code">dir_b</span>) intersect. If yes, return the point of intersection as <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a>. If no intersection takes place, returns an empty <span class="code">Variant</span>.</p><p>Note: The lines are specified using direction vectors, not end points.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="31de348b-ecb8-6311-7060-6834022ca490.htm">MakeAtlas</a></td><td><div class="summary"><p>Given an array of <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a>s representing tiles, builds an atlas. The returned dictionary has two keys: <span class="code">points</span> is a vector of <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a> that specifies the positions of each tile, <span class="code">size</span> contains the overall size of the whole atlas as <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="9bedc15a-ee92-681e-5d5c-fa8970aaf5c6.htm">MergePolygons2d</a></td><td><div class="summary"><p>Merges (combines) <span class="code">polygon_a</span> and <span class="code">polygon_b</span> and returns an array of merged polygons. This performs  between polygons.</p><p>The operation may result in an outer polygon (boundary) and multiple inner polygons (holes) produced which could be distinguished by calling <a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise(<span id="LST12276251_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_12?cpp=array&lt;");</script>Vector2<span id="LST12276251_13"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_13?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="8475eb78-5121-3f0d-b47d-5fe07784a975.htm">OffsetPolygon2d</a></td><td><div class="summary"><p>Inflates or deflates <span class="code">polygon</span> by <span class="code">delta</span> units (pixels). If <span class="code">delta</span> is positive, makes the polygon grow outward. If <span class="code">delta</span> is negative, shrinks the polygon inward. Returns an array of polygons because inflating/deflating may result in multiple discrete polygons. Returns an empty array if <span class="code">delta</span> is negative and the absolute value of it approximately exceeds the minimum bounding rectangle dimensions of the polygon.</p><p>Each polygon's vertices will be rounded as determined by <span class="code">join_type</span>, see <a href="b5c5898b-b8b6-224b-10c9-9e313fba6ef0.htm">Geometry<span id="LST12276251_14"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_14?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PolyJoinType</a>.</p><p>The operation may result in an outer polygon (boundary) and inner polygon (hole) produced which could be distinguished by calling <a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise(<span id="LST12276251_15"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_15?cpp=array&lt;");</script>Vector2<span id="LST12276251_16"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_16?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.</p><p>Note: To translate the polygon's vertices specifically, use the <span class="code">Transform2D.xform</span> method:</p><p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAAAAMCDA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAAAAMCDA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAAAAMCDA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">var</span> polygon = PoolVector2Array([Vector2(<span class="highlight-number">0</span>, <span class="highlight-number">0</span>), Vector2(<span class="highlight-number">100</span>, <span class="highlight-number">0</span>), Vector2(<span class="highlight-number">100</span>, <span class="highlight-number">100</span>), Vector2(<span class="highlight-number">0</span>, <span class="highlight-number">100</span>)])
<span class="highlight-keyword">var</span> offset = Vector2(<span class="highlight-number">50</span>, <span class="highlight-number">50</span>)
polygon = Transform2D(<span class="highlight-number">0</span>, offset).xform(polygon)
print(polygon) # prints [Vector2(<span class="highlight-number">50</span>, <span class="highlight-number">50</span>), Vector2(<span class="highlight-number">150</span>, <span class="highlight-number">50</span>), Vector2(<span class="highlight-number">150</span>, <span class="highlight-number">150</span>), Vector2(<span class="highlight-number">50</span>, <span class="highlight-number">150</span>)]</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAAAAMCDA");</script></p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0bd464ee-e799-9269-7df5-4124844396ed.htm">OffsetPolyline2d</a></td><td><div class="summary"><p>Inflates or deflates <span class="code">polyline</span> by <span class="code">delta</span> units (pixels), producing polygons. If <span class="code">delta</span> is positive, makes the polyline grow outward. Returns an array of polygons because inflating/deflating may result in multiple discrete polygons. If <span class="code">delta</span> is negative, returns an empty array.</p><p>Each polygon's vertices will be rounded as determined by <span class="code">join_type</span>, see <a href="b5c5898b-b8b6-224b-10c9-9e313fba6ef0.htm">Geometry<span id="LST12276251_17"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_17?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PolyJoinType</a>.</p><p>Each polygon's endpoints will be rounded as determined by <span class="code">end_type</span>, see <a href="224bdb01-e563-57c1-6da4-26cd45de5ef6.htm">Geometry<span id="LST12276251_18"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_18?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>PolyEndType</a>.</p><p>The operation may result in an outer polygon (boundary) and inner polygon (hole) produced which could be distinguished by calling <a href="35afc5b9-0dd1-a480-2bae-3634e24a6c86.htm">IsPolygonClockwise(<span id="LST12276251_19"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_19?cpp=array&lt;");</script>Vector2<span id="LST12276251_20"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST12276251_20?cpp=&gt;|cs=[]|vb=()|nu=[]|fs=[]");</script>)</a>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="a7bda92a-3871-3f42-74fa-584361bd069d.htm">PointIsInsideTriangle</a></td><td><div class="summary"><p>Returns if <span class="code">point</span> is inside the triangle specified by <span class="code">a</span>, <span class="code">b</span> and <span class="code">c</span>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d82aa6a9-b5ae-bdbd-e8da-75d2791b3f64.htm">RayIntersectsTriangle</a></td><td><div class="summary"><p>Tests if the 3D ray starting at <span class="code">from</span> with the direction of <span class="code">dir</span> intersects the triangle specified by <span class="code">a</span>, <span class="code">b</span> and <span class="code">c</span>. If yes, returns the point of intersection as <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a>. If no intersection takes place, an empty <span class="code">Variant</span> is returned.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="775bb39a-55a5-add0-1638-9d45c0297101.htm">SegmentIntersectsCircle</a></td><td><div class="summary"><p>Given the 2D segment (<span class="code">segment_from</span>, <span class="code">segment_to</span>), returns the position on the segment (as a number between 0 and 1) at which the segment hits the circle that is located at position <span class="code">circle_position</span> and has radius <span class="code">circle_radius</span>. If the segment does not intersect the circle, -1 is returned (this is also the case if the line extending the segment would intersect the circle, but the segment does not).</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="88a92327-f76c-1f63-557e-df2946b4cc55.htm">SegmentIntersectsConvex</a></td><td><div class="summary"><p>Given a convex hull defined though the <a href="6bae6a30-944d-55fd-6c78-48fa9398e566.htm">Plane</a>s in the array <span class="code">planes</span>, tests if the segment (<span class="code">from</span>, <span class="code">to</span>) intersects with that hull. If an intersection is found, returns a <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a> containing the point the intersection and the hull's normal. If no intersecion is found, an the returned array is empty.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="d74f0b2e-ef2e-ce00-1142-9a8e68c68380.htm">SegmentIntersectsCylinder</a></td><td><div class="summary"><p>Checks if the segment (<span class="code">from</span>, <span class="code">to</span>) intersects the cylinder with height <span class="code">height</span> that is centered at the origin and has radius <span class="code">radius</span>. If no, returns an empty <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a>. If an intersection takes place, the returned array contains the point of intersection and the cylinder's normal at the point of intersection.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="fd80c38a-af02-8a18-45a3-1e01cc4b8397.htm">SegmentIntersectsSegment2d</a></td><td><div class="summary"><p>Checks if the two segments (<span class="code">from_a</span>, <span class="code">to_a</span>) and (<span class="code">from_b</span>, <span class="code">to_b</span>) intersect. If yes, return the point of intersection as <a href="13da5030-b6c4-93b2-3a09-13a24998b6dc.htm">Vector2</a>. If no intersection takes place, returns an empty <span class="code">Variant</span>.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="0717394f-1162-3f2c-e726-41130d6ee6b8.htm">SegmentIntersectsSphere</a></td><td><div class="summary"><p>Checks if the segment (<span class="code">from</span>, <span class="code">to</span>) intersects the sphere that is located at <span class="code">sphere_position</span> and has radius <span class="code">sphere_radius</span>. If no, returns an empty <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a>. If yes, returns a <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a> containing the point of intersection and the sphere's normal at the point of intersection.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="2a4af066-4a15-8320-674f-fae14babe775.htm">SegmentIntersectsTriangle</a></td><td><div class="summary"><p>Tests if the segment (<span class="code">from</span>, <span class="code">to</span>) intersects the triangle <span class="code">a</span>, <span class="code">b</span>, <span class="code">c</span>. If yes, returns the point of intersection as <a href="5d51518f-8121-6daf-b9f5-4f134227ba43.htm">Vector3</a>. If no intersection takes place, an empty <span class="code">Variant</span> is returned.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="3d83c816-585c-3cd7-dd54-af8e17630b59.htm">TriangulateDelaunay2d</a></td><td><div class="summary"><p>Triangulates the area specified by discrete set of <span class="code">points</span> such that no point is inside the circumcircle of any resulting triangle. Returns a <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a> where each triangle consists of three consecutive point indices into <span class="code">points</span> (i.e. the returned array will have <span class="code">n * 3</span> elements, with <span class="code">n</span> being the number of found triangles). If the triangulation did not succeed, an empty <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a> is returned.</p></div></td></tr><tr data="public;static;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/static.gif" alt="Static member" title="Static member" /></td><td><a href="27a47b8a-dfbe-4ee3-a118-200072396782.htm">TriangulatePolygon</a></td><td><div class="summary"><p>Triangulates the polygon specified by the points in <span class="code">polygon</span>. Returns a <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a> where each triangle consists of three consecutive point indices into <span class="code">polygon</span> (i.e. the returned array will have <span class="code">n * 3</span> elements, with <span class="code">n</span> being the number of found triangles). If the triangulation did not succeed, an empty <a href="https://docs.microsoft.com/dotnet/api/system.int32" target="_blank" rel="noopener noreferrer">Int32</a> is returned.</p></div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID5RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="c7d41d90-59b4-4e80-d334-bd2586caedfd.htm">Godot Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"> </div></body></html>